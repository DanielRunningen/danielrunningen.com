__NUXT_JSONP__("/projects/text-rain-with-processing", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad){return {data:[{project:{slug:"text-rain-with-processing",description:"This Processing sketch is derived from Camille Utterback's Text Rain project where a video feed allows users to interact with letters falling from the top of the screen like rain. It is the first project of the CSCI 4611 - Programming Graphics and Games class offered as an elective for computer science students at the University of Minnesota. It's primary purpose was to introduce students to rendering loops and how to update and maintain graphics between frames, but it gave us the opportunity to test out custom controls as well.",createdAt:"2021-02-07T21:26:00.000Z",title:"Text Rain Sketch with Processing",descriptionInArticle:false,image:"TextRain.png",imageAlt:"A still frame from the application showing a black and white video where a woman sits in the center holding an umbrella while a hand enters from the right side of the frame in the foreground. Colorful letters descend from the top of the frame and stop when obstructed by a dark object.",readMore:e,tags:[{text:"Java",show:e},{text:"Processing",show:e},{text:"Simulated Physics",show:e}],toc:[{id:E,depth:s,text:F},{id:G,depth:s,text:H},{id:I,depth:s,text:J},{id:K,depth:s,text:L}],body:{type:M,children:[{type:b,tag:m,props:{},children:[{type:a,value:N},{type:b,tag:q,props:{href:O,rel:[P,Q,R],target:S},children:[{type:a,value:T}]},{type:a,value:U}]},{type:a,value:d},{type:a,value:d},{type:b,tag:t,props:{id:E},children:[{type:b,tag:q,props:{href:"#project-requirements",ariaHidden:u,tabIndex:v},children:[{type:b,tag:g,props:{className:[w,x]},children:[]}]},{type:a,value:F}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"This is the list of requirements that students were given to help guide them as they progressed through their project. This was a great help for us because it gave us a concrete structure to follow with no questions on where our projects stood. It also gave us ideas for how to improve our projects."}]},{type:a,value:d},{type:b,tag:r,props:{className:[y]},children:[{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" C requirements\n"},{type:b,tag:r,props:{className:[y]},children:[{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Draw video frames to the screen (basically already done by the support code)."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Load a font into Processing."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Use the font to draw characters on the screen so they show up on top of the video."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Animate the characters, making them fall down the screen."}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" B requirements\n"},{type:b,tag:r,props:{className:[y]},children:[{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Make the characters stop falling when they \"land\" on a dark object."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Support interactive threshold adjustment for situations with different lighting conditions by changing the value of the threshold used to determine foreground and background objects interactively using the UP and DOWN arrow keys."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Support debugging and setting a good threshold by displaying the results of the threshold computation – when SPACEBAR is pressed, toggle between displaying the final user view and a \"debugging\" view that shows a binary image for the foreground\u002Fbackground classification: all pixels classified as foreground should be pure black, all pixels classified as background should be pure white."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" As in Utterback’s implementation, display the video image in grayscale and the text rain in color."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Flip the video image displayed on the screen so when viewers look at the display it looks like they are looking in a mirror at themselves. This must apply to both live video and pre-recorded video files."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Pick characters to display (i.e., new rain to add to the scene) at random from some text that is artistically appropriate for the Text Rain theme."}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" A requirements\n"},{type:b,tag:r,props:{className:[y]},children:[{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Make the rain falling algorithm \"robust\" so that rain doesn’t pass through black regions even if they are very thin (e.g., just a pixel wide)."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Make the rain falling algorithm \"robust\" so that rain doesn’t just come to a rest when it lands in the palm of a viewer’s outstretched hand but will also rise up with the hand if the viewer raises his\u002Fher hand."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Use a useful, more sophisticated algorithm (you should come up with your own idea here and "},{type:b,tag:p,props:{},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"describe it in your README file"}]}]},{type:a,value:") for picking characters to display at random so that the rain still looks random but there is a reasonable likelihood of catching (or seeing) a set of raindrops that spell out a whole word."}]},{type:a,value:d},{type:b,tag:f,props:{className:[h]},children:[{type:b,tag:i,props:{checked:e,disabled:e,type:j},children:[]},{type:a,value:" Include some variation in the velocity of the raindrops to make it look a bit more interesting."}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:t,props:{id:G},children:[{type:b,tag:q,props:{href:"#comparing-to-the-original",ariaHidden:u,tabIndex:v},children:[{type:b,tag:g,props:{className:[w,x]},children:[]}]},{type:a,value:H}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"There is a couple differences in this rendition to take note of:"}]},{type:a,value:d},{type:b,tag:r,props:{},children:[{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"Utterback's original installation had multiple instances of the same letter falling in place. The letters here are more tightly packed, but only one copy will ever fall in a particular location."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"The colors of the original lettering are two-tone. Here they are a rainbow spectrum based entirely on where that letter is along the width of the frame. Who doesn't like rainbows?"}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"The falling letters in Utterback's version came to rest on top of whichever dark spot was in-line for that character, even if the character was already underneath the dark zone. By default, this one will do the same, but there is a setting that allows you to adjust this to be more reasonable. It's based on a percentage of the letter's hight, so smaller letters will escape easier, akin to sand."}]},{type:a,value:d},{type:b,tag:f,props:{},children:[{type:a,value:"The text from Utterback's design was from a poem. For this version, you may be able to catch the first couple phrases from Train's song, \"Drops of Jupiter\"."}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"One way that I'm sure our algorithms are similar is where the text is arranged along the width in a way that could be legible given the right conditions. The implementation in this version can be seen about line 20:"}]},{type:a,value:d},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:g,props:{className:["filename"]},children:[{type:a,value:"helpers.pde"}]},{type:b,tag:"pre",props:{className:["language-java","line-numbers"]},children:[{type:b,tag:n,props:{},children:[{type:b,tag:g,props:{className:[k,B]},children:[{type:a,value:"\u002F\u002F Their x values are shifted to make it look a little more"}]},{type:a,value:d},{type:b,tag:g,props:{className:[k,B]},children:[{type:a,value:"\u002F\u002F    natural. The shifting is minimal so words can still"}]},{type:a,value:d},{type:b,tag:g,props:{className:[k,B]},children:[{type:a,value:"\u002F\u002F    appear legible."}]},{type:a,value:"\nframeWidth "},{type:b,tag:g,props:{className:[k,z]},children:[{type:a,value:"\u002F"}]},{type:a,value:" phraseLength "},{type:b,tag:g,props:{className:[k,z]},children:[{type:a,value:"*"}]},{type:a,value:" i "},{type:b,tag:g,props:{className:[k,z]},children:[{type:a,value:"+"}]},{type:a,value:V},{type:b,tag:g,props:{className:[k,"function"]},children:[{type:a,value:"random"}]},{type:b,tag:g,props:{className:[k,A]},children:[{type:a,value:"("}]},{type:b,tag:g,props:{className:[k,z]},children:[{type:a,value:"-"}]},{type:b,tag:g,props:{className:[k,W]},children:[{type:a,value:X}]},{type:b,tag:g,props:{className:[k,A]},children:[{type:a,value:Y}]},{type:a,value:V},{type:b,tag:g,props:{className:[k,W]},children:[{type:a,value:X}]},{type:b,tag:g,props:{className:[k,A]},children:[{type:a,value:")"}]},{type:b,tag:g,props:{className:[k,A]},children:[{type:a,value:Y}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"This chunk is in the middle of creating all the "},{type:b,tag:n,props:{},children:[{type:a,value:"Letter"}]},{type:a,value:" objects.\r\nIn particular, this is for assigning the x coordinate or pixel column, where "},{type:b,tag:n,props:{},children:[{type:a,value:Z}]},{type:a,value:" is the index for the ith character in the phrase.\r\nThe "},{type:b,tag:n,props:{},children:[{type:a,value:"random(-2, 2)"}]},{type:a,value:" adds a little bit of jitter to make the spacing feel slightly more organic, otherwise each letter's midline would be at a uniform distance form each other."}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"The randomness is also aided by another call to "},{type:b,tag:n,props:{},children:[{type:a,value:"random()"}]},{type:a,value:" to assign a font size for that letter, which changes on every \"lap\" around the window.\r\nThis "},{type:b,tag:n,props:{},children:[{type:a,value:"size"}]},{type:a,value:" not only changes the font, but also influences the velocity of each letter and a handful of other calculations."}]},{type:a,value:d},{type:b,tag:t,props:{id:I},children:[{type:b,tag:q,props:{href:"#what-else-is-new",ariaHidden:u,tabIndex:v},children:[{type:b,tag:g,props:{className:[w,x]},children:[]}]},{type:a,value:J}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"A few keyboard interrupts were required as part of the assignment.\r\nPressing the "},{type:b,tag:p,props:{},children:[{type:a,value:"space bar"}]},{type:a,value:" will change the view to what the algorithm sees when deciding where to place a letter.\r\nAll pixels on the canvas are turned to either black or white based on the current value for the "},{type:b,tag:p,props:{},children:[{type:a,value:"brightness threshold"}]},{type:a,value:".\r\nThis value can be adjusted by pressing the "},{type:b,tag:p,props:{},children:[{type:a,value:"up"}]},{type:a,value:_},{type:b,tag:p,props:{},children:[{type:a,value:"down"}]},{type:a,value:" arrow keys.\r\nFor the convenience of the uer, this is displayed in the bottom-right corner of the window.\r\nHowever, this is not the only value that can be adjusted."}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"Pressing the "},{type:b,tag:p,props:{},children:[{type:a,value:"left"}]},{type:a,value:_},{type:b,tag:p,props:{},children:[{type:a,value:"right"}]},{type:a,value:" arrow keys will allow the user to switch between several different parameters to be fine-tuned."}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:$,props:{},children:[{type:b,tag:aa,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:o,props:{},children:[{type:a,value:"Display Name"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Default"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Min"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Max"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Step"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Description"}]}]}]},{type:b,tag:ab,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Brightness Threshold"}]},{type:b,tag:c,props:{},children:[{type:a,value:"128"}]},{type:b,tag:c,props:{},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{},children:[{type:a,value:"255"}]},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:b,tag:c,props:{},children:[{type:a,value:"The minimum brightness that letters will land on"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Frames per Lap"}]},{type:b,tag:c,props:{},children:[{type:a,value:"250"}]},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:b,tag:c,props:{},children:[{type:a,value:"500"}]},{type:b,tag:c,props:{},children:[{type:a,value:"25"}]},{type:b,tag:c,props:{},children:[{type:a,value:"How many frames a letter is allowed to stay on the screen before returning to the top"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Bounce Tolerance"}]},{type:b,tag:c,props:{},children:[{type:a,value:"400"}]},{type:b,tag:c,props:{},children:[{type:a,value:"50"}]},{type:b,tag:c,props:{},children:[{type:a,value:"1000"}]},{type:b,tag:c,props:{},children:[{type:a,value:"5"}]},{type:b,tag:c,props:{},children:[{type:a,value:"The percentage of the letter's hight to search for a shelf to sit on (how high will the letters \"bounce\" from a fast movement)"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Minimum Font Size"}]},{type:b,tag:c,props:{},children:[{type:a,value:"12"}]},{type:b,tag:c,props:{},children:[{type:a,value:"10"}]},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:b,tag:c,props:{},children:[{type:a,value:"The smallest size in pixels that the letters will spawn at"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Maximum Font Size"}]},{type:b,tag:c,props:{},children:[{type:a,value:"36"}]},{type:b,tag:c,props:{},children:[{type:a,value:ac}]},{type:b,tag:c,props:{},children:[{type:a,value:"64"}]},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:b,tag:c,props:{},children:[{type:a,value:"The largest size in pixels that the letters will spawn at"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Feed Width"}]},{type:b,tag:c,props:{},children:[{type:a,value:"1280"}]},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:b,tag:c,props:{},children:[{type:a,value:"3840"}]},{type:b,tag:c,props:{},children:[{type:a,value:ad}]},{type:b,tag:c,props:{},children:[{type:a,value:"How far to stretch the incoming image horizontally"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:a,value:"Feed Height"}]},{type:b,tag:c,props:{},children:[{type:a,value:"720"}]},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:b,tag:c,props:{},children:[{type:a,value:"2160"}]},{type:b,tag:c,props:{},children:[{type:a,value:ad}]},{type:b,tag:c,props:{},children:[{type:a,value:"How far to stretch the incoming image vertically"}]}]}]}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"Additionally, some other keybindings have been set."}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:$,props:{},children:[{type:b,tag:aa,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:o,props:{},children:[{type:a,value:"Key"}]},{type:b,tag:o,props:{},children:[{type:a,value:"Action"}]}]}]},{type:b,tag:ab,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"q"}]}]},{type:b,tag:c,props:{},children:[{type:a,value:"Quit the sketch from either the menu or the video"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:Z}]}]},{type:b,tag:c,props:{},children:[{type:a,value:"Change the video input method"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:m}]}]},{type:b,tag:c,props:{},children:[{type:a,value:"Pause or play the video input (the text will still fall)"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{},children:[{type:b,tag:n,props:{},children:[{type:a,value:"r"}]}]},{type:b,tag:c,props:{},children:[{type:a,value:"Freeze or thaw the text falling (the video will still play)"}]}]}]}]},{type:a,value:d},{type:b,tag:t,props:{id:K},children:[{type:b,tag:q,props:{href:"#final-remarks",ariaHidden:u,tabIndex:v},children:[{type:b,tag:g,props:{className:[w,x]},children:[]}]},{type:a,value:L}]},{type:a,value:d},{type:b,tag:m,props:{},children:[{type:a,value:"This was a highly enjoyable exercise that resulted in a great visual result. I was able to provide plenty of extensions to customize the simulation. The only drawback was that this sketch requires the Processing engine to run it. There are ways to make similar simulations through a web interface, which I may attempt in the future."}]}]},excerpt:{type:M,children:[{type:b,tag:m,props:{},children:[{type:a,value:N},{type:b,tag:q,props:{href:O,rel:[P,Q,R],target:S},children:[{type:a,value:T}]},{type:a,value:U}]}]},dir:"\u002Fprojects",path:"\u002Fprojects\u002Ftext-rain-with-processing",extension:".md",updatedAt:"2023-11-16T03:54:22.119Z"}}],fetch:{},mutations:void 0}}("text","element","td","\n",true,"li","span","task-list-item","input","checkbox","token","tr","p","code","th","strong","a","ul",2,"h2","true",-1,"icon","icon-link","contains-task-list","operator","punctuation","comment","1","100","project-requirements","Project Requirements","comparing-to-the-original","Comparing to the Original","what-else-is-new","What else is new?","final-remarks","Final Remarks","root","This Processing sketch is derived from ","http:\u002F\u002Fcamilleutterback.com\u002Fprojects\u002Ftext-rain\u002F","nofollow","noopener","noreferrer","_blank","Camille Utterback's Text Rain project"," where a video feed allows users to interact with letters falling from the top of the screen like rain. It is the first project of the CSCI 4611 - Programming Graphics and Games class offered as an elective for computer science students at the University of Minnesota. It's primary purpose was to introduce students to rendering loops and how to update and maintain graphics between frames, but it gave us the opportunity to test out custom controls as well."," ","number","2",",","i"," and ","table","thead","tbody","32","20")));